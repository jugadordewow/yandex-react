import React from 'react';
import { useEffect, useState } from 'react';
import PropTypes from 'prop-types';
<<<<<<< HEAD:react-burger/src/components/app/app.js
import styles from './app.module.css';
=======
import './App.css';
>>>>>>> 0186b68ea8d4088e9e0850fa5d89c9877376a4f1:react-burger/src/components/app/App.js
import AppHeader from '../app-header/app-header';
import BurgerService from "../../utils/data";
import BurgerIngredients from '../burger-ingredients/burger-ingredients';
import BurgerConstructor from '../burger-constructor/burger-constructor';
import OrderDetails from '../oder-details/order-details';
import IngridientDetails from '../ingridient-details/ingridient-details';


const App = () => {

const burgerService = new BurgerService();

const [data, setData] = useState([]);

const [selectedItem, setSelectedItem] = useState(null);

const [orderVisible, setOrderVisible] = useState(false);

const [productInfo, setProductInfo] = useState(false);

const [modal, setModal] = useState('hidden');

    useEffect(() => {
      const onRequest = () => {
        burgerService.getAllData()
        .then (res => setData([...data, ...res]))
        .catch();
      };
      onRequest();
    }, [] );
   
<<<<<<< HEAD:react-burger/src/components/app/app.js
=======
    useEffect(() => {
      setModalInfo();
    }, [order, selectedItem])
>>>>>>> 0186b68ea8d4088e9e0850fa5d89c9877376a4f1:react-burger/src/components/app/App.js

const onItemSelected = (id) => {
  setSelectedItem(selectedItem => id);
}  

const itemSelected = data.find(item => item._id === selectedItem);

const showOrderInfo = () => {
  setOrderVisible(true)
}

const hideOrderInfo = () => {
  setOrderVisible(false)
}

const showProductInfo = () => {
  setProductInfo(true)
}

<<<<<<< HEAD:react-burger/src/components/app/app.js
const hideProductInfo = () => {
  setProductInfo(false)
}
=======
const setModalInfo = () => {
  if(selectedItem !== null || order !== false) {
      setModal('active');
  }
}

const itemInfo = (selectedItem !== null && selectedItem !== '') ? <IngridientDetails onItemSelected = {selectedItem}  /> :null;
const orderInfo = (order !== false && order !== null) ? <OrderDetails setOrder = {order} /> : null;
>>>>>>> 0186b68ea8d4088e9e0850fa5d89c9877376a4f1:react-burger/src/components/app/App.js

  return (
    <div className={styles.App}>
      <AppHeader/>
      <div className={styles.main}>
         {data.length > 0 ? <BurgerIngredients 
            onItemSelected = {onItemSelected}
            onShowProduct = {showProductInfo}
            props = {data}/> : null }
<<<<<<< HEAD:react-burger/src/components/app/app.js
          {data.length > 0 ? <BurgerConstructor props = {data} onShowOrder = {showOrderInfo} /> : null}
         { productInfo && <IngridientDetails onClose={hideProductInfo} itemSelected={itemSelected}/>}
         { orderVisible && <OrderDetails onClose = {hideOrderInfo}/> }
=======
          {data.length > 0 ? <BurgerConstructor 
                                  props = {data} 
                                  setOrder = {setOrder}
                              /> : null}
         <Modal modal ={modal} >
            {itemInfo}
            {orderInfo}
         </Modal>
>>>>>>> 0186b68ea8d4088e9e0850fa5d89c9877376a4f1:react-burger/src/components/app/App.js
      </div>
    </div>
  );
}

App.propTypes = {
  onItemSelected: PropTypes.func,
  setOrder: PropTypes.bool
}

export default App;


